/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EventEscrow,
  EventEscrowInterface,
} from "../../contracts/EventEscrow";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_usdcToken",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_beneficiaries",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "shares",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "indexedcaller",
        type: "address",
      },
    ],
    name: "PaymentDistributed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "beneficiaries",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "distributePayments",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "payouts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "usdcToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200119d3803806200119d8339818101604052810190620000379190620005ac565b80518251146200007e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200007590620006cd565b60405180910390fd5b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160029080519060200190620000d6929190620001ba565b5060005b8251811015620001b057818181518110620000fa57620000f9620006ef565b5b6020026020010151600160008584815181106200011c576200011b620006ef565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550818181518110620001785762000177620006ef565b5b6020026020010151600360008282546200019391906200074d565b925050819055508080620001a79062000788565b915050620000da565b50505050620007d5565b82805482825590600052602060002090810192821562000236579160200282015b82811115620002355782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190620001db565b5b50905062000245919062000249565b5090565b5b80821115620002645760008160009055506001016200024a565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002a9826200027c565b9050919050565b6000620002bd826200029c565b9050919050565b620002cf81620002b0565b8114620002db57600080fd5b50565b600081519050620002ef81620002c4565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200034582620002fa565b810181811067ffffffffffffffff821117156200036757620003666200030b565b5b80604052505050565b60006200037c62000268565b90506200038a82826200033a565b919050565b600067ffffffffffffffff821115620003ad57620003ac6200030b565b5b602082029050602081019050919050565b600080fd5b620003ce816200029c565b8114620003da57600080fd5b50565b600081519050620003ee81620003c3565b92915050565b60006200040b62000405846200038f565b62000370565b90508083825260208201905060208402830185811115620004315762000430620003be565b5b835b818110156200045e5780620004498882620003dd565b84526020840193505060208101905062000433565b5050509392505050565b600082601f83011262000480576200047f620002f5565b5b815162000492848260208601620003f4565b91505092915050565b600067ffffffffffffffff821115620004b957620004b86200030b565b5b602082029050602081019050919050565b6000819050919050565b620004df81620004ca565b8114620004eb57600080fd5b50565b600081519050620004ff81620004d4565b92915050565b60006200051c62000516846200049b565b62000370565b90508083825260208201905060208402830185811115620005425762000541620003be565b5b835b818110156200056f57806200055a8882620004ee565b84526020840193505060208101905062000544565b5050509392505050565b600082601f830112620005915762000590620002f5565b5b8151620005a384826020860162000505565b91505092915050565b600080600060608486031215620005c857620005c762000272565b5b6000620005d886828701620002de565b935050602084015167ffffffffffffffff811115620005fc57620005fb62000277565b5b6200060a8682870162000468565b925050604084015167ffffffffffffffff8111156200062e576200062d62000277565b5b6200063c8682870162000579565b9150509250925092565b600082825260208201905092915050565b7f4d69736d6174636865642062656e6566696369617269657320616e642073686160008201527f7265732e00000000000000000000000000000000000000000000000000000000602082015250565b6000620006b560248362000646565b9150620006c28262000657565b604082019050919050565b60006020820190508181036000830152620006e881620006a6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200075a82620004ca565b91506200076783620004ca565b92508282019050808211156200078257620007816200071e565b5b92915050565b60006200079582620004ca565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620007ca57620007c96200071e565b5b600182019050919050565b6109b880620007e56000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806311eac8551461005c5780633a98ef391461007a57806365bcfbe714610098578063dd84b5f6146100c8578063efeb5e58146100d2575b600080fd5b610064610102565b6040516100719190610508565b60405180910390f35b610082610126565b60405161008f919061053c565b60405180910390f35b6100b260048036038101906100ad919061059a565b61012c565b6040516100bf919061053c565b60405180910390f35b6100d0610144565b005b6100ec60048036038101906100e791906105f3565b61044a565b6040516100f9919061062f565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60016020528060005260406000206000915090505481565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116101c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bd906106a7565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610222919061062f565b602060405180830381865afa15801561023f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026391906106dc565b9050600081116102a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029f90610755565b60405180910390fd5b60005b600280549050811015610446576000600282815481106102ce576102cd610775565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600354600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548561034b91906107d3565b6103559190610844565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016103b2929190610875565b6020604051808303816000875af11580156103d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f591906108d6565b507f54671ed5b46041912e71433c137078ccb494dc08e8e10fe9ec7d2d691cc42a3e82823360405161042993929190610903565b60405180910390a15050808061043e9061093a565b9150506102ab565b5050565b6002818154811061045a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006104ce6104c96104c484610489565b6104a9565b610489565b9050919050565b60006104e0826104b3565b9050919050565b60006104f2826104d5565b9050919050565b610502816104e7565b82525050565b600060208201905061051d60008301846104f9565b92915050565b6000819050919050565b61053681610523565b82525050565b6000602082019050610551600083018461052d565b92915050565b600080fd5b600061056782610489565b9050919050565b6105778161055c565b811461058257600080fd5b50565b6000813590506105948161056e565b92915050565b6000602082840312156105b0576105af610557565b5b60006105be84828501610585565b91505092915050565b6105d081610523565b81146105db57600080fd5b50565b6000813590506105ed816105c7565b92915050565b60006020828403121561060957610608610557565b5b6000610617848285016105de565b91505092915050565b6106298161055c565b82525050565b60006020820190506106446000830184610620565b92915050565b600082825260208201905092915050565b7f4e6f7420612062656e6566696369617279000000000000000000000000000000600082015250565b600061069160118361064a565b915061069c8261065b565b602082019050919050565b600060208201905081810360008301526106c081610684565b9050919050565b6000815190506106d6816105c7565b92915050565b6000602082840312156106f2576106f1610557565b5b6000610700848285016106c7565b91505092915050565b7f4e6f2066756e647320746f20646973747269627574652e000000000000000000600082015250565b600061073f60178361064a565b915061074a82610709565b602082019050919050565b6000602082019050818103600083015261076e81610732565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107de82610523565b91506107e983610523565b92508282026107f781610523565b9150828204841483151761080e5761080d6107a4565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061084f82610523565b915061085a83610523565b92508261086a57610869610815565b5b828204905092915050565b600060408201905061088a6000830185610620565b610897602083018461052d565b9392505050565b60008115159050919050565b6108b38161089e565b81146108be57600080fd5b50565b6000815190506108d0816108aa565b92915050565b6000602082840312156108ec576108eb610557565b5b60006108fa848285016108c1565b91505092915050565b60006060820190506109186000830186610620565b610925602083018561052d565b6109326040830184610620565b949350505050565b600061094582610523565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610977576109766107a4565b5b60018201905091905056fea264697066735822122006ec8a2d87ef83a825f037bd3fb1269ff016b8ccc230f1d7134a8845655c2d3d64736f6c63430008140033";

type EventEscrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EventEscrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EventEscrow__factory extends ContractFactory {
  constructor(...args: EventEscrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _usdcToken: AddressLike,
    _beneficiaries: AddressLike[],
    shares: BigNumberish[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _usdcToken,
      _beneficiaries,
      shares,
      overrides || {}
    );
  }
  override deploy(
    _usdcToken: AddressLike,
    _beneficiaries: AddressLike[],
    shares: BigNumberish[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _usdcToken,
      _beneficiaries,
      shares,
      overrides || {}
    ) as Promise<
      EventEscrow & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EventEscrow__factory {
    return super.connect(runner) as EventEscrow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EventEscrowInterface {
    return new Interface(_abi) as EventEscrowInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EventEscrow {
    return new Contract(address, _abi, runner) as unknown as EventEscrow;
  }
}
