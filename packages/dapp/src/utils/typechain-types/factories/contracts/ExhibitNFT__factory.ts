/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ExhibitNFT,
  ExhibitNFTInterface,
} from "../../contracts/ExhibitNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_ticketPrice",
        type: "uint256",
      },
      {
        internalType: "contract EventEscrow",
        name: "_escrow",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "TicketMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "escrow",
    outputs: [
      {
        internalType: "contract EventEscrow",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mintTicket",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ticketPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002b0038038062002b00833981810160405281019062000037919062000480565b80858581600090816200004b919062000787565b5080600190816200005d919062000787565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000d55760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000cc91906200087f565b60405180910390fd5b620000e6816200014260201b60201c565b508260078190555081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060098190555050505050506200089c565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002718262000226565b810181811067ffffffffffffffff8211171562000293576200029262000237565b5b80604052505050565b6000620002a862000208565b9050620002b6828262000266565b919050565b600067ffffffffffffffff821115620002d957620002d862000237565b5b620002e48262000226565b9050602081019050919050565b60005b8381101562000311578082015181840152602081019050620002f4565b60008484015250505050565b6000620003346200032e84620002bb565b6200029c565b90508281526020810184848401111562000353576200035262000221565b5b62000360848285620002f1565b509392505050565b600082601f83011262000380576200037f6200021c565b5b8151620003928482602086016200031d565b91505092915050565b6000819050919050565b620003b0816200039b565b8114620003bc57600080fd5b50565b600081519050620003d081620003a5565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200040382620003d6565b9050919050565b60006200041782620003f6565b9050919050565b62000429816200040a565b81146200043557600080fd5b50565b60008151905062000449816200041e565b92915050565b6200045a81620003f6565b81146200046657600080fd5b50565b6000815190506200047a816200044f565b92915050565b600080600080600060a086880312156200049f576200049e62000212565b5b600086015167ffffffffffffffff811115620004c057620004bf62000217565b5b620004ce8882890162000368565b955050602086015167ffffffffffffffff811115620004f257620004f162000217565b5b620005008882890162000368565b94505060406200051388828901620003bf565b9350506060620005268882890162000438565b9250506080620005398882890162000469565b9150509295509295909350565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200059957607f821691505b602082108103620005af57620005ae62000551565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620006197fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620005da565b620006258683620005da565b95508019841693508086168417925050509392505050565b6000819050919050565b600062000668620006626200065c846200039b565b6200063d565b6200039b565b9050919050565b6000819050919050565b620006848362000647565b6200069c62000693826200066f565b848454620005e7565b825550505050565b600090565b620006b3620006a4565b620006c081848462000679565b505050565b5b81811015620006e857620006dc600082620006a9565b600181019050620006c6565b5050565b601f82111562000737576200070181620005b5565b6200070c84620005ca565b810160208510156200071c578190505b620007346200072b85620005ca565b830182620006c5565b50505b505050565b600082821c905092915050565b60006200075c600019846008026200073c565b1980831691505092915050565b600062000777838362000749565b9150826002028217905092915050565b620007928262000546565b67ffffffffffffffff811115620007ae57620007ad62000237565b5b620007ba825462000580565b620007c7828285620006ec565b600060209050601f831160018114620007ff5760008415620007ea578287015190505b620007f6858262000769565b86555062000866565b601f1984166200080f86620005b5565b60005b82811015620008395784890151825560018201915060208501945060208101905062000812565b8683101562000859578489015162000855601f89168262000749565b8355505b6001600288020188555050505b505050505050565b6200087981620003f6565b82525050565b60006020820190506200089660008301846200086e565b92915050565b61225480620008ac6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063b88d4fde11610071578063b88d4fde14610308578063c87b56dd14610324578063e2fdcc1714610354578063e985e9c514610372578063f2fde38b146103a257610121565b806370a0823114610276578063715018a6146102a65780638da5cb5b146102b057806395d89b41146102ce578063a22cb465146102ec57610121565b8063095ea7b3116100f4578063095ea7b3146101d45780631209b1f6146101f057806323b872dd1461020e57806342842e0e1461022a5780636352211e1461024657610121565b806301ffc9a71461012657806306fdde0314610156578063081812fc1461017457806308e9bd26146101a4575b600080fd5b610140600480360381019061013b91906119ad565b6103be565b60405161014d91906119f5565b60405180910390f35b61015e6104a0565b60405161016b9190611aa0565b60405180910390f35b61018e60048036038101906101899190611af8565b610532565b60405161019b9190611b66565b60405180910390f35b6101be60048036038101906101b99190611bad565b61054e565b6040516101cb9190611be9565b60405180910390f35b6101ee60048036038101906101e99190611c04565b6105c3565b005b6101f86105d9565b6040516102059190611be9565b60405180910390f35b61022860048036038101906102239190611c44565b6105df565b005b610244600480360381019061023f9190611c44565b6106e1565b005b610260600480360381019061025b9190611af8565b610701565b60405161026d9190611b66565b60405180910390f35b610290600480360381019061028b9190611bad565b610713565b60405161029d9190611be9565b60405180910390f35b6102ae6107cd565b005b6102b86107e1565b6040516102c59190611b66565b60405180910390f35b6102d661080b565b6040516102e39190611aa0565b60405180910390f35b61030660048036038101906103019190611cc3565b61089d565b005b610322600480360381019061031d9190611e38565b6108b3565b005b61033e60048036038101906103399190611af8565b6108d0565b60405161034b9190611aa0565b60405180910390f35b61035c610939565b6040516103699190611f1a565b60405180910390f35b61038c60048036038101906103879190611f35565b61095f565b60405161039991906119f5565b60405180910390f35b6103bc60048036038101906103b79190611bad565b6109f3565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061048957507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610499575061049882610a79565b5b9050919050565b6060600080546104af90611fa4565b80601f01602080910402602001604051908101604052809291908181526020018280546104db90611fa4565b80156105285780601f106104fd57610100808354040283529160200191610528565b820191906000526020600020905b81548152906001019060200180831161050b57829003601f168201915b5050505050905090565b600061053d82610ae3565b5061054782610b6b565b9050919050565b6000610558610ba8565b600060095490506009600081548092919061057290612004565b91905055506105818382610c2f565b7fe3bc6f5972e89b7adec47f0277204f27cd981570e200dd4d408093535c9e8e6983826040516105b292919061204c565b60405180910390a180915050919050565b6105d582826105d0610c4d565b610c55565b5050565b60075481565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106515760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016106489190611b66565b60405180910390fd5b60006106658383610660610c4d565b610c67565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106db578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016106d293929190612075565b60405180910390fd5b50505050565b6106fc838383604051806020016040528060008152506108b3565b505050565b600061070c82610ae3565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107865760006040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161077d9190611b66565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6107d5610ba8565b6107df6000610e81565b565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461081a90611fa4565b80601f016020809104026020016040519081016040528092919081815260200182805461084690611fa4565b80156108935780601f1061086857610100808354040283529160200191610893565b820191906000526020600020905b81548152906001019060200180831161087657829003601f168201915b5050505050905090565b6108af6108a8610c4d565b8383610f47565b5050565b6108be8484846105df565b6108ca848484846110b6565b50505050565b60606108db82610ae3565b5060006108e661126d565b905060008151116109065760405180602001604052806000815250610931565b8061091084611284565b6040516020016109219291906120e8565b6040516020818303038152906040525b915050919050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6109fb610ba8565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a6d5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a649190611b66565b60405180910390fd5b610a7681610e81565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080610aef83611352565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b6257826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610b599190611be9565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610bb0610c4d565b73ffffffffffffffffffffffffffffffffffffffff16610bce6107e1565b73ffffffffffffffffffffffffffffffffffffffff1614610c2d57610bf1610c4d565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c249190611b66565b60405180910390fd5b565b610c4982826040518060200160405280600081525061138f565b5050565b600033905090565b610c6283838360016113ab565b505050565b600080610c7384611352565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610cb557610cb4818486611570565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d4657610cf76000856000806113ab565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610dc9576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fb857816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610faf9190611b66565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110a991906119f5565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611267578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026110fa610c4d565b8685856040518563ffffffff1660e01b815260040161111c9493929190612161565b6020604051808303816000875af192505050801561115857506040513d601f19601f8201168201806040525081019061115591906121c2565b60015b6111dc573d8060008114611188576040519150601f19603f3d011682016040523d82523d6000602084013e61118d565b606091505b5060008151036111d457836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111cb9190611b66565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461126557836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161125c9190611b66565b60405180910390fd5b505b50505050565b606060405180602001604052806000815250905090565b60606000600161129384611634565b01905060008167ffffffffffffffff8111156112b2576112b1611d0d565b5b6040519080825280601f01601f1916602001820160405280156112e45781602001600182028036833780820191505090505b509050600082602001820190505b600115611347578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161133b5761133a6121ef565b5b049450600085036112f2575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6113998383611787565b6113a660008484846110b6565b505050565b80806113e45750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156115185760006113f484610ae3565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561145f57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156114725750611470818461095f565b155b156114b457826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016114ab9190611b66565b60405180910390fd5b811561151657838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b61157b838383611880565b61162f57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115f057806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016115e79190611be9565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161162692919061204c565b60405180910390fd5b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611692577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611688576116876121ef565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106116cf576d04ee2d6d415b85acef810000000083816116c5576116c46121ef565b5b0492506020810190505b662386f26fc1000083106116fe57662386f26fc1000083816116f4576116f36121ef565b5b0492506010810190505b6305f5e1008310611727576305f5e100838161171d5761171c6121ef565b5b0492506008810190505b612710831061174c576127108381611742576117416121ef565b5b0492506004810190505b6064831061176f5760648381611765576117646121ef565b5b0492506002810190505b600a831061177e576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117f95760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016117f09190611b66565b60405180910390fd5b600061180783836000610c67565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461187b5760006040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016118729190611b66565b60405180910390fd5b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561193857508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806118f957506118f8848461095f565b5b8061193757508273ffffffffffffffffffffffffffffffffffffffff1661191f83610b6b565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61198a81611955565b811461199557600080fd5b50565b6000813590506119a781611981565b92915050565b6000602082840312156119c3576119c261194b565b5b60006119d184828501611998565b91505092915050565b60008115159050919050565b6119ef816119da565b82525050565b6000602082019050611a0a60008301846119e6565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611a4a578082015181840152602081019050611a2f565b60008484015250505050565b6000601f19601f8301169050919050565b6000611a7282611a10565b611a7c8185611a1b565b9350611a8c818560208601611a2c565b611a9581611a56565b840191505092915050565b60006020820190508181036000830152611aba8184611a67565b905092915050565b6000819050919050565b611ad581611ac2565b8114611ae057600080fd5b50565b600081359050611af281611acc565b92915050565b600060208284031215611b0e57611b0d61194b565b5b6000611b1c84828501611ae3565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b5082611b25565b9050919050565b611b6081611b45565b82525050565b6000602082019050611b7b6000830184611b57565b92915050565b611b8a81611b45565b8114611b9557600080fd5b50565b600081359050611ba781611b81565b92915050565b600060208284031215611bc357611bc261194b565b5b6000611bd184828501611b98565b91505092915050565b611be381611ac2565b82525050565b6000602082019050611bfe6000830184611bda565b92915050565b60008060408385031215611c1b57611c1a61194b565b5b6000611c2985828601611b98565b9250506020611c3a85828601611ae3565b9150509250929050565b600080600060608486031215611c5d57611c5c61194b565b5b6000611c6b86828701611b98565b9350506020611c7c86828701611b98565b9250506040611c8d86828701611ae3565b9150509250925092565b611ca0816119da565b8114611cab57600080fd5b50565b600081359050611cbd81611c97565b92915050565b60008060408385031215611cda57611cd961194b565b5b6000611ce885828601611b98565b9250506020611cf985828601611cae565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611d4582611a56565b810181811067ffffffffffffffff82111715611d6457611d63611d0d565b5b80604052505050565b6000611d77611941565b9050611d838282611d3c565b919050565b600067ffffffffffffffff821115611da357611da2611d0d565b5b611dac82611a56565b9050602081019050919050565b82818337600083830152505050565b6000611ddb611dd684611d88565b611d6d565b905082815260208101848484011115611df757611df6611d08565b5b611e02848285611db9565b509392505050565b600082601f830112611e1f57611e1e611d03565b5b8135611e2f848260208601611dc8565b91505092915050565b60008060008060808587031215611e5257611e5161194b565b5b6000611e6087828801611b98565b9450506020611e7187828801611b98565b9350506040611e8287828801611ae3565b925050606085013567ffffffffffffffff811115611ea357611ea2611950565b5b611eaf87828801611e0a565b91505092959194509250565b6000819050919050565b6000611ee0611edb611ed684611b25565b611ebb565b611b25565b9050919050565b6000611ef282611ec5565b9050919050565b6000611f0482611ee7565b9050919050565b611f1481611ef9565b82525050565b6000602082019050611f2f6000830184611f0b565b92915050565b60008060408385031215611f4c57611f4b61194b565b5b6000611f5a85828601611b98565b9250506020611f6b85828601611b98565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611fbc57607f821691505b602082108103611fcf57611fce611f75565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061200f82611ac2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361204157612040611fd5565b5b600182019050919050565b60006040820190506120616000830185611b57565b61206e6020830184611bda565b9392505050565b600060608201905061208a6000830186611b57565b6120976020830185611bda565b6120a46040830184611b57565b949350505050565b600081905092915050565b60006120c282611a10565b6120cc81856120ac565b93506120dc818560208601611a2c565b80840191505092915050565b60006120f482856120b7565b915061210082846120b7565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b60006121338261210c565b61213d8185612117565b935061214d818560208601611a2c565b61215681611a56565b840191505092915050565b60006080820190506121766000830187611b57565b6121836020830186611b57565b6121906040830185611bda565b81810360608301526121a28184612128565b905095945050505050565b6000815190506121bc81611981565b92915050565b6000602082840312156121d8576121d761194b565b5b60006121e6848285016121ad565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea264697066735822122076576503fd5d94c5218f7c8880e6b0ce1a300feb7b4320d67e2b0ce33a36a01964736f6c63430008140033";

type ExhibitNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExhibitNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExhibitNFT__factory extends ContractFactory {
  constructor(...args: ExhibitNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    _ticketPrice: BigNumberish,
    _escrow: AddressLike,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      _ticketPrice,
      _escrow,
      _owner,
      overrides || {}
    );
  }
  override deploy(
    name: string,
    symbol: string,
    _ticketPrice: BigNumberish,
    _escrow: AddressLike,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name,
      symbol,
      _ticketPrice,
      _escrow,
      _owner,
      overrides || {}
    ) as Promise<
      ExhibitNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ExhibitNFT__factory {
    return super.connect(runner) as ExhibitNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExhibitNFTInterface {
    return new Interface(_abi) as ExhibitNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ExhibitNFT {
    return new Contract(address, _abi, runner) as unknown as ExhibitNFT;
  }
}
